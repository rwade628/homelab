---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          filesync:
            image:
              repository: alpine
              tag: latest
            securityContext:
              allowPrivilegeEscalation: true
              runAsUser: 0
            command:
              - 'sh'
              - '-c'
              - |
                apk add rsync
                echo "Staring copy"
                rsync -avPh /mnt/original/ /config/
                rsync -avPh /mnt/originalCache/ /config/MediaCover
                echo "Finished copy"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/radarr
              tag: 5.20.1.9773@sha256:4fa8fc7dcf3b38dbed279125330a8b9bd7be6e68e317e685089d3b03774aeeab
            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__DBENABLED: "False"
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 80
              RADARR__UPDATE__BRANCH: develop
              TZ: America/New_York
            # envFrom:
            #   - secretRef:
            #       name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      originalConfig:
        existingClaim: radarr-config
        globalMounts:
          - path: /mnt/original
      config:
        existingClaim: radarr
      originalCache:
        globalMounts:
          - path: /mnt/originalCache
      cache:
        existingClaim: radarr-cache
        globalMounts:
          - path: /config/MediaCover
      # scripts:
      #   type: configMap
      #   name: radarr-configmap
      #   defaultMode: 0775
      #   globalMounts:
      #     - path: /scripts/pushover-notifier.sh
      #       subPath: pushover-notifier.sh
      #       readOnly: true
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: 10.0.10.3
        path: /mnt/storage/k8s/media
        globalMounts:
          - path: /media

