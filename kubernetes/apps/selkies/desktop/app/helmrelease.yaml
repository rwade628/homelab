---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app desktop
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
    timeout: 5m
  values:
    controllers:
      desktop:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          network:
            image:
              repository: nicolaka/netshoot
              tag: v0.14
              pullPolicy: IfNotPresent
            env:
              - name: DEV
                value: eth0
            command:
              - "/bin/bash"
              - "-c"
              - |
                POD_IP=$( ip route | grep $DEV | grep default | tr -s ' ' | cut -d ' ' -f 3) && \
                ip route del default via $POD_IP
                ip route add 10.69.0.0/16 via $POD_IP dev $DEV && \
                ip route add 10.96.0.0/16 via $POD_IP dev $DEV && \
                echo -e "\nip route after fix:" && ip route
            securityContext:
              runAsNonRoot: false
              runAsUser: 0
              runAsGroup: 0
              allowPrivilegeEscalation: true
              capabilities:
                add:
                  - NET_ADMIN
        containers:
          app:
            image:
              repository: docker.io/linuxserver/webtop
              tag: amd64-ubuntu-kde@sha256:a3a6c56e477dd885fef65fb2bd385adf673c431c30868bae980ed964f8fb5a6a
            env:
              TZ: America/New_York
              PUID: 1000
              PGID: 1000
              DOCKER_MODS: linuxserver/mods:universal-package-install
              INSTALL_PACKAGES: ffmpeg|ffmpegthumbs|vlc
              PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: selkies-auth-secret
                    key: password
            securityContext:
              {}
              # allowPrivilegeEscalation: true
              # readOnlyRootFilesystem: false
              # capabilities: { drop: ["ALL"] }
            stdin: true
            tty: true
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
                amd.com/gpu: 1
              limits:
                cpu: 8
                memory: 8Gi
                amd.com/gpu: 1
    defaultPodOptions:
      annotations:
        k8s.v1.cni.cncf.io/networks: kube-system/vpn-macvlan
      securityContext:
        {}
        # runAsNonRoot: false
        # runAsUser: 508
        # runAsGroup: 508
        # fsGroup: 508
        # fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: desktop
        ports:
          http:
            primary: true
            port: &port 3000
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      # cache:
      #   type: emptyDir
      #   globalMounts:
      #     - path: /cache
      # dshm:
      #   type: emptyDir
      #   globalMounts:
      #     - path: /dev/shm
      config:
        existingClaim: desktop
      media:
        type: nfs
        server: 10.0.10.3
        path: /mnt/storage/k8s/media
        globalMounts:
          - path: /mnt/public
